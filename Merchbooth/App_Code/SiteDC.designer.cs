#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Merchbooth.App_Code
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CPDM_EricksonM")]
	public partial class SiteDCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBand(TBand instance);
    partial void UpdateTBand(TBand instance);
    partial void DeleteTBand(TBand instance);
    partial void InsertTType(TType instance);
    partial void UpdateTType(TType instance);
    partial void DeleteTType(TType instance);
    partial void InsertTBandsOrder(TBandsOrder instance);
    partial void UpdateTBandsOrder(TBandsOrder instance);
    partial void DeleteTBandsOrder(TBandsOrder instance);
    partial void InsertTBaseType(TBaseType instance);
    partial void UpdateTBaseType(TBaseType instance);
    partial void DeleteTBaseType(TBaseType instance);
    partial void InsertTColor(TColor instance);
    partial void UpdateTColor(TColor instance);
    partial void DeleteTColor(TColor instance);
    partial void InsertTCustomerPurchaseProduct(TCustomerPurchaseProduct instance);
    partial void UpdateTCustomerPurchaseProduct(TCustomerPurchaseProduct instance);
    partial void DeleteTCustomerPurchaseProduct(TCustomerPurchaseProduct instance);
    partial void InsertTCustomerPurchase(TCustomerPurchase instance);
    partial void UpdateTCustomerPurchase(TCustomerPurchase instance);
    partial void DeleteTCustomerPurchase(TCustomerPurchase instance);
    partial void InsertTCustomer(TCustomer instance);
    partial void UpdateTCustomer(TCustomer instance);
    partial void DeleteTCustomer(TCustomer instance);
    partial void InsertTGender(TGender instance);
    partial void UpdateTGender(TGender instance);
    partial void DeleteTGender(TGender instance);
    partial void InsertTMember(TMember instance);
    partial void UpdateTMember(TMember instance);
    partial void DeleteTMember(TMember instance);
    partial void InsertTOrdersSupplierProduct(TOrdersSupplierProduct instance);
    partial void UpdateTOrdersSupplierProduct(TOrdersSupplierProduct instance);
    partial void DeleteTOrdersSupplierProduct(TOrdersSupplierProduct instance);
    partial void InsertTProduct(TProduct instance);
    partial void UpdateTProduct(TProduct instance);
    partial void DeleteTProduct(TProduct instance);
    partial void InsertTState(TState instance);
    partial void UpdateTState(TState instance);
    partial void DeleteTState(TState instance);
    partial void InsertTSupplierProduct(TSupplierProduct instance);
    partial void UpdateTSupplierProduct(TSupplierProduct instance);
    partial void DeleteTSupplierProduct(TSupplierProduct instance);
    partial void InsertTSupplier(TSupplier instance);
    partial void UpdateTSupplier(TSupplier instance);
    partial void DeleteTSupplier(TSupplier instance);
    #endregion
		
		public SiteDCDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CPDM_EricksonMConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SiteDCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SiteDCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SiteDCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SiteDCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<VBandsMember> VBandsMembers
		{
			get
			{
				return this.GetTable<VBandsMember>();
			}
		}
		
		public System.Data.Linq.Table<VSuppliersProduct> VSuppliersProducts
		{
			get
			{
				return this.GetTable<VSuppliersProduct>();
			}
		}
		
		public System.Data.Linq.Table<VBandsOrder> VBandsOrders
		{
			get
			{
				return this.GetTable<VBandsOrder>();
			}
		}
		
		public System.Data.Linq.Table<VCustomersPurchase> VCustomersPurchases
		{
			get
			{
				return this.GetTable<VCustomersPurchase>();
			}
		}
		
		public System.Data.Linq.Table<TBand> TBands
		{
			get
			{
				return this.GetTable<TBand>();
			}
		}
		
		public System.Data.Linq.Table<TType> TTypes
		{
			get
			{
				return this.GetTable<TType>();
			}
		}
		
		public System.Data.Linq.Table<TBandsOrder> TBandsOrders
		{
			get
			{
				return this.GetTable<TBandsOrder>();
			}
		}
		
		public System.Data.Linq.Table<TBaseType> TBaseTypes
		{
			get
			{
				return this.GetTable<TBaseType>();
			}
		}
		
		public System.Data.Linq.Table<TColor> TColors
		{
			get
			{
				return this.GetTable<TColor>();
			}
		}
		
		public System.Data.Linq.Table<TCustomerPurchaseProduct> TCustomerPurchaseProducts
		{
			get
			{
				return this.GetTable<TCustomerPurchaseProduct>();
			}
		}
		
		public System.Data.Linq.Table<TCustomerPurchase> TCustomerPurchases
		{
			get
			{
				return this.GetTable<TCustomerPurchase>();
			}
		}
		
		public System.Data.Linq.Table<TCustomer> TCustomers
		{
			get
			{
				return this.GetTable<TCustomer>();
			}
		}
		
		public System.Data.Linq.Table<TGender> TGenders
		{
			get
			{
				return this.GetTable<TGender>();
			}
		}
		
		public System.Data.Linq.Table<TMember> TMembers
		{
			get
			{
				return this.GetTable<TMember>();
			}
		}
		
		public System.Data.Linq.Table<TOrdersSupplierProduct> TOrdersSupplierProducts
		{
			get
			{
				return this.GetTable<TOrdersSupplierProduct>();
			}
		}
		
		public System.Data.Linq.Table<TProduct> TProducts
		{
			get
			{
				return this.GetTable<TProduct>();
			}
		}
		
		public System.Data.Linq.Table<TState> TStates
		{
			get
			{
				return this.GetTable<TState>();
			}
		}
		
		public System.Data.Linq.Table<TSupplierProduct> TSupplierProducts
		{
			get
			{
				return this.GetTable<TSupplierProduct>();
			}
		}
		
		public System.Data.Linq.Table<TSupplier> TSuppliers
		{
			get
			{
				return this.GetTable<TSupplier>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="db_owner.uspAddBand")]
		public int uspAddBand([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> intBandID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intStateID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strBandName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strPhone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strCity, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strZip)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBandID, intStateID, strBandName, strPhone, strEmail, strCity, strAddress, strZip);
			intBandID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="db_owner.uspAddSupplierProduct")]
		public int uspAddSupplierProduct([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> intSupplierProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intSupplierID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(9,2)")] System.Nullable<decimal> decSupplierPrice)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSupplierProductID, intSupplierID, intProductID, decSupplierPrice);
			intSupplierProductID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="db_owner.uspAddBandMember")]
		public int uspAddBandMember([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> intMemberID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intBandID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intStateID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intGenderID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strFirstName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strLastName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strPhone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strCity, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strZip, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(9,2)")] System.Nullable<decimal> decSalary)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMemberID, intBandID, intStateID, intGenderID, strFirstName, strLastName, strPhone, strEmail, strAddress, strCity, strZip, decSalary);
			intMemberID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="db_owner.uspAddBandOrder")]
		public int uspAddBandOrder([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> intBandOrderID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intBandID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intOrderNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(9,2)")] System.Nullable<decimal> decTotal, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> dtmDateTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBandOrderID, intBandID, intOrderNumber, decTotal, dtmDateTime);
			intBandOrderID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="db_owner.uspAddBandOrderProducts")]
		public int uspAddBandOrderProducts([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> intOrderSupplierProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intBandOrderID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intSupplierProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intProductOrderCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intOrderSupplierProductID, intBandOrderID, intSupplierProductID, intProductOrderCount);
			intOrderSupplierProductID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="db_owner.uspAddBaseType")]
		public int uspAddBaseType([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> intBaseTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strBaseType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBaseTypeID, strBaseType);
			intBaseTypeID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="db_owner.uspAddColor")]
		public int uspAddColor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> intColorID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strColor)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intColorID, strColor);
			intColorID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="db_owner.uspAddCustomer")]
		public int uspAddCustomer([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> intCustomerID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intStateID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intGenderID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strFirstName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strLastName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strPhone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strCity, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strZip)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCustomerID, intStateID, intGenderID, strFirstName, strLastName, strPhone, strEmail, strAddress, strCity, strZip);
			intCustomerID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="db_owner.uspAddCustomerPurchase")]
		public int uspAddCustomerPurchase([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> intCustomerPurchaseID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intCustomerID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intPurchaseNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(9,2)")] System.Nullable<decimal> decTotal, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> dtmDateTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCustomerPurchaseID, intCustomerID, intPurchaseNumber, decTotal, dtmDateTime);
			intCustomerPurchaseID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="db_owner.uspAddCustomerPurchaseProduct")]
		public int uspAddCustomerPurchaseProduct([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> intCustomerPurchaseProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intCustomerPurchaseID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intProductPurchaseCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCustomerPurchaseProductID, intCustomerPurchaseID, intProductID, intProductPurchaseCount);
			intCustomerPurchaseProductID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="db_owner.uspAddProduct")]
		public int uspAddProduct([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> intProductID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intBandID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strProductName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(9,2)")] System.Nullable<decimal> decBandPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intAmountAvialable, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strImageLink)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProductID, intBandID, intTypeID, strProductName, decBandPrice, intAmountAvialable, strImageLink);
			intProductID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="db_owner.uspAddProductType")]
		public int uspAddProductType([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> intTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intBaseTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intColorID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strQrCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intTypeID, intBaseTypeID, intColorID, strQrCode);
			intTypeID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="db_owner.uspAddSupplier")]
		public int uspAddSupplier([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> intSupplierID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intStateID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strSupplierName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strPhone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strCity, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string strZip)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSupplierID, intStateID, strSupplierName, strPhone, strEmail, strCity, strAddress, strZip);
			intSupplierID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.VBandsMembers")]
	public partial class VBandsMember
	{
		
		private int _intBandID;
		
		private string _strBandName;
		
		private string _Phone;
		
		private string _Email;
		
		private string _strStateName;
		
		private string _City;
		
		private string _Address;
		
		private string _Zip;
		
		private int _intStateID;
		
		private string _strLastName;
		
		private string _strFirstName;
		
		private string _strEmail;
		
		private string _strPhone;
		
		private string _strGender;
		
		private string _strAddress;
		
		private string _strCity;
		
		private string _strZip;
		
		private decimal _decSalary;
		
		private int _intGenderID;
		
		public VBandsMember()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBandID", DbType="Int NOT NULL")]
		public int intBandID
		{
			get
			{
				return this._intBandID;
			}
			set
			{
				if ((this._intBandID != value))
				{
					this._intBandID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strBandName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strBandName
		{
			get
			{
				return this._strBandName;
			}
			set
			{
				if ((this._strBandName != value))
				{
					this._strBandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strStateName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strStateName
		{
			get
			{
				return this._strStateName;
			}
			set
			{
				if ((this._strStateName != value))
				{
					this._strStateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this._Zip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intStateID", DbType="Int NOT NULL")]
		public int intStateID
		{
			get
			{
				return this._intStateID;
			}
			set
			{
				if ((this._intStateID != value))
				{
					this._intStateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strLastName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strLastName
		{
			get
			{
				return this._strLastName;
			}
			set
			{
				if ((this._strLastName != value))
				{
					this._strLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strFirstName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strFirstName
		{
			get
			{
				return this._strFirstName;
			}
			set
			{
				if ((this._strFirstName != value))
				{
					this._strFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEmail", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strEmail
		{
			get
			{
				return this._strEmail;
			}
			set
			{
				if ((this._strEmail != value))
				{
					this._strEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPhone", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strPhone
		{
			get
			{
				return this._strPhone;
			}
			set
			{
				if ((this._strPhone != value))
				{
					this._strPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strGender", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strGender
		{
			get
			{
				return this._strGender;
			}
			set
			{
				if ((this._strGender != value))
				{
					this._strGender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strAddress
		{
			get
			{
				return this._strAddress;
			}
			set
			{
				if ((this._strAddress != value))
				{
					this._strAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCity", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strCity
		{
			get
			{
				return this._strCity;
			}
			set
			{
				if ((this._strCity != value))
				{
					this._strCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strZip", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strZip
		{
			get
			{
				return this._strZip;
			}
			set
			{
				if ((this._strZip != value))
				{
					this._strZip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decSalary", DbType="Decimal(9,2) NOT NULL")]
		public decimal decSalary
		{
			get
			{
				return this._decSalary;
			}
			set
			{
				if ((this._decSalary != value))
				{
					this._decSalary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intGenderID", DbType="Int NOT NULL")]
		public int intGenderID
		{
			get
			{
				return this._intGenderID;
			}
			set
			{
				if ((this._intGenderID != value))
				{
					this._intGenderID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.VSuppliersProducts")]
	public partial class VSuppliersProduct
	{
		
		private int _intSupplierID;
		
		private string _strSupplierName;
		
		private string _strPhone;
		
		private string _strEmail;
		
		private string _strStateName;
		
		private int _intStateID;
		
		private string _strAddress;
		
		private string _strCity;
		
		private string _strZip;
		
		private int _intBandID;
		
		private string _strBandName;
		
		private int _intProductID;
		
		private string _strProductName;
		
		private decimal _decBandPrice;
		
		private int _intAmountAvialable;
		
		private string _strImageLink;
		
		private string _strBaseType;
		
		private string _strColor;
		
		private int _intTypeID;
		
		private int _intColorID;
		
		public VSuppliersProduct()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intSupplierID", DbType="Int NOT NULL")]
		public int intSupplierID
		{
			get
			{
				return this._intSupplierID;
			}
			set
			{
				if ((this._intSupplierID != value))
				{
					this._intSupplierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strSupplierName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strSupplierName
		{
			get
			{
				return this._strSupplierName;
			}
			set
			{
				if ((this._strSupplierName != value))
				{
					this._strSupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPhone", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strPhone
		{
			get
			{
				return this._strPhone;
			}
			set
			{
				if ((this._strPhone != value))
				{
					this._strPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEmail", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strEmail
		{
			get
			{
				return this._strEmail;
			}
			set
			{
				if ((this._strEmail != value))
				{
					this._strEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strStateName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strStateName
		{
			get
			{
				return this._strStateName;
			}
			set
			{
				if ((this._strStateName != value))
				{
					this._strStateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intStateID", DbType="Int NOT NULL")]
		public int intStateID
		{
			get
			{
				return this._intStateID;
			}
			set
			{
				if ((this._intStateID != value))
				{
					this._intStateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strAddress
		{
			get
			{
				return this._strAddress;
			}
			set
			{
				if ((this._strAddress != value))
				{
					this._strAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCity", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strCity
		{
			get
			{
				return this._strCity;
			}
			set
			{
				if ((this._strCity != value))
				{
					this._strCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strZip", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strZip
		{
			get
			{
				return this._strZip;
			}
			set
			{
				if ((this._strZip != value))
				{
					this._strZip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBandID", DbType="Int NOT NULL")]
		public int intBandID
		{
			get
			{
				return this._intBandID;
			}
			set
			{
				if ((this._intBandID != value))
				{
					this._intBandID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strBandName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strBandName
		{
			get
			{
				return this._strBandName;
			}
			set
			{
				if ((this._strBandName != value))
				{
					this._strBandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intProductID", DbType="Int NOT NULL")]
		public int intProductID
		{
			get
			{
				return this._intProductID;
			}
			set
			{
				if ((this._intProductID != value))
				{
					this._intProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strProductName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strProductName
		{
			get
			{
				return this._strProductName;
			}
			set
			{
				if ((this._strProductName != value))
				{
					this._strProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decBandPrice", DbType="Decimal(9,2) NOT NULL")]
		public decimal decBandPrice
		{
			get
			{
				return this._decBandPrice;
			}
			set
			{
				if ((this._decBandPrice != value))
				{
					this._decBandPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intAmountAvialable", DbType="Int NOT NULL")]
		public int intAmountAvialable
		{
			get
			{
				return this._intAmountAvialable;
			}
			set
			{
				if ((this._intAmountAvialable != value))
				{
					this._intAmountAvialable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strImageLink", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strImageLink
		{
			get
			{
				return this._strImageLink;
			}
			set
			{
				if ((this._strImageLink != value))
				{
					this._strImageLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strBaseType", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strBaseType
		{
			get
			{
				return this._strBaseType;
			}
			set
			{
				if ((this._strBaseType != value))
				{
					this._strBaseType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strColor", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strColor
		{
			get
			{
				return this._strColor;
			}
			set
			{
				if ((this._strColor != value))
				{
					this._strColor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intTypeID", DbType="Int NOT NULL")]
		public int intTypeID
		{
			get
			{
				return this._intTypeID;
			}
			set
			{
				if ((this._intTypeID != value))
				{
					this._intTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intColorID", DbType="Int NOT NULL")]
		public int intColorID
		{
			get
			{
				return this._intColorID;
			}
			set
			{
				if ((this._intColorID != value))
				{
					this._intColorID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.VBandsOrders")]
	public partial class VBandsOrder
	{
		
		private int _intBandID;
		
		private string _strBandName;
		
		private string _strPhone;
		
		private string _strEmail;
		
		private int _intStateID;
		
		private string _strStateName;
		
		private string _strCity;
		
		private string _strAddress;
		
		private string _strZip;
		
		private int _intBandOrderID;
		
		private int _intOrderNumber;
		
		private decimal _decTotal;
		
		private System.DateTime _dtmDateTime;
		
		private int _Order_Product;
		
		private int _intProductOrderCount;
		
		private decimal _decProductTotal;
		
		private int _intSupplierProductID;
		
		private decimal _decSupplierPrice;
		
		private int _intProductID;
		
		private string _strProductName;
		
		private string _strImageLink;
		
		private string _strBaseType;
		
		private string _strColor;
		
		private int _intTypeID;
		
		private int _intColorID;
		
		public VBandsOrder()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBandID", DbType="Int NOT NULL")]
		public int intBandID
		{
			get
			{
				return this._intBandID;
			}
			set
			{
				if ((this._intBandID != value))
				{
					this._intBandID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strBandName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strBandName
		{
			get
			{
				return this._strBandName;
			}
			set
			{
				if ((this._strBandName != value))
				{
					this._strBandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPhone", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strPhone
		{
			get
			{
				return this._strPhone;
			}
			set
			{
				if ((this._strPhone != value))
				{
					this._strPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEmail", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strEmail
		{
			get
			{
				return this._strEmail;
			}
			set
			{
				if ((this._strEmail != value))
				{
					this._strEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intStateID", DbType="Int NOT NULL")]
		public int intStateID
		{
			get
			{
				return this._intStateID;
			}
			set
			{
				if ((this._intStateID != value))
				{
					this._intStateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strStateName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strStateName
		{
			get
			{
				return this._strStateName;
			}
			set
			{
				if ((this._strStateName != value))
				{
					this._strStateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCity", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strCity
		{
			get
			{
				return this._strCity;
			}
			set
			{
				if ((this._strCity != value))
				{
					this._strCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strAddress
		{
			get
			{
				return this._strAddress;
			}
			set
			{
				if ((this._strAddress != value))
				{
					this._strAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strZip", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strZip
		{
			get
			{
				return this._strZip;
			}
			set
			{
				if ((this._strZip != value))
				{
					this._strZip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBandOrderID", DbType="Int NOT NULL")]
		public int intBandOrderID
		{
			get
			{
				return this._intBandOrderID;
			}
			set
			{
				if ((this._intBandOrderID != value))
				{
					this._intBandOrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intOrderNumber", DbType="Int NOT NULL")]
		public int intOrderNumber
		{
			get
			{
				return this._intOrderNumber;
			}
			set
			{
				if ((this._intOrderNumber != value))
				{
					this._intOrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decTotal", DbType="Decimal(9,2) NOT NULL")]
		public decimal decTotal
		{
			get
			{
				return this._decTotal;
			}
			set
			{
				if ((this._decTotal != value))
				{
					this._decTotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtmDateTime", DbType="Date NOT NULL")]
		public System.DateTime dtmDateTime
		{
			get
			{
				return this._dtmDateTime;
			}
			set
			{
				if ((this._dtmDateTime != value))
				{
					this._dtmDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order Product]", Storage="_Order_Product", DbType="Int NOT NULL")]
		public int Order_Product
		{
			get
			{
				return this._Order_Product;
			}
			set
			{
				if ((this._Order_Product != value))
				{
					this._Order_Product = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intProductOrderCount", DbType="Int NOT NULL")]
		public int intProductOrderCount
		{
			get
			{
				return this._intProductOrderCount;
			}
			set
			{
				if ((this._intProductOrderCount != value))
				{
					this._intProductOrderCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decProductTotal", DbType="Decimal(9,2) NOT NULL")]
		public decimal decProductTotal
		{
			get
			{
				return this._decProductTotal;
			}
			set
			{
				if ((this._decProductTotal != value))
				{
					this._decProductTotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intSupplierProductID", DbType="Int NOT NULL")]
		public int intSupplierProductID
		{
			get
			{
				return this._intSupplierProductID;
			}
			set
			{
				if ((this._intSupplierProductID != value))
				{
					this._intSupplierProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decSupplierPrice", DbType="Decimal(9,2) NOT NULL")]
		public decimal decSupplierPrice
		{
			get
			{
				return this._decSupplierPrice;
			}
			set
			{
				if ((this._decSupplierPrice != value))
				{
					this._decSupplierPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intProductID", DbType="Int NOT NULL")]
		public int intProductID
		{
			get
			{
				return this._intProductID;
			}
			set
			{
				if ((this._intProductID != value))
				{
					this._intProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strProductName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strProductName
		{
			get
			{
				return this._strProductName;
			}
			set
			{
				if ((this._strProductName != value))
				{
					this._strProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strImageLink", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strImageLink
		{
			get
			{
				return this._strImageLink;
			}
			set
			{
				if ((this._strImageLink != value))
				{
					this._strImageLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strBaseType", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strBaseType
		{
			get
			{
				return this._strBaseType;
			}
			set
			{
				if ((this._strBaseType != value))
				{
					this._strBaseType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strColor", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strColor
		{
			get
			{
				return this._strColor;
			}
			set
			{
				if ((this._strColor != value))
				{
					this._strColor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intTypeID", DbType="Int NOT NULL")]
		public int intTypeID
		{
			get
			{
				return this._intTypeID;
			}
			set
			{
				if ((this._intTypeID != value))
				{
					this._intTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intColorID", DbType="Int NOT NULL")]
		public int intColorID
		{
			get
			{
				return this._intColorID;
			}
			set
			{
				if ((this._intColorID != value))
				{
					this._intColorID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.VCustomersPurchases")]
	public partial class VCustomersPurchase
	{
		
		private int _intCustomerID;
		
		private string _strFirstName;
		
		private string _strLastName;
		
		private string _strPhone;
		
		private string _strEmail;
		
		private int _intStateID;
		
		private string _strStateName;
		
		private string _strCity;
		
		private string _strAddress;
		
		private string _strZip;
		
		private int _intGenderID;
		
		private string _strGender;
		
		private int _intCustomerPurchaseID;
		
		private int _intPurchaseNumber;
		
		private decimal _Purchase_Total;
		
		private System.DateTime _dtmDateTime;
		
		private int _intCustomerPurchaseProductID;
		
		private int _intProductPurchaseCount;
		
		private decimal _decProductTotal;
		
		private int _intProductID;
		
		private string _strProductName;
		
		private decimal _decBandPrice;
		
		private string _strImageLink;
		
		private int _intTypeID;
		
		private string _strBaseType;
		
		private int _intColorID;
		
		private string _strColor;
		
		private int _intBandID;
		
		private string _strBandName;
		
		public VCustomersPurchase()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCustomerID", DbType="Int NOT NULL")]
		public int intCustomerID
		{
			get
			{
				return this._intCustomerID;
			}
			set
			{
				if ((this._intCustomerID != value))
				{
					this._intCustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strFirstName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strFirstName
		{
			get
			{
				return this._strFirstName;
			}
			set
			{
				if ((this._strFirstName != value))
				{
					this._strFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strLastName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strLastName
		{
			get
			{
				return this._strLastName;
			}
			set
			{
				if ((this._strLastName != value))
				{
					this._strLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPhone", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strPhone
		{
			get
			{
				return this._strPhone;
			}
			set
			{
				if ((this._strPhone != value))
				{
					this._strPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEmail", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strEmail
		{
			get
			{
				return this._strEmail;
			}
			set
			{
				if ((this._strEmail != value))
				{
					this._strEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intStateID", DbType="Int NOT NULL")]
		public int intStateID
		{
			get
			{
				return this._intStateID;
			}
			set
			{
				if ((this._intStateID != value))
				{
					this._intStateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strStateName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strStateName
		{
			get
			{
				return this._strStateName;
			}
			set
			{
				if ((this._strStateName != value))
				{
					this._strStateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCity", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strCity
		{
			get
			{
				return this._strCity;
			}
			set
			{
				if ((this._strCity != value))
				{
					this._strCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strAddress
		{
			get
			{
				return this._strAddress;
			}
			set
			{
				if ((this._strAddress != value))
				{
					this._strAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strZip", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strZip
		{
			get
			{
				return this._strZip;
			}
			set
			{
				if ((this._strZip != value))
				{
					this._strZip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intGenderID", DbType="Int NOT NULL")]
		public int intGenderID
		{
			get
			{
				return this._intGenderID;
			}
			set
			{
				if ((this._intGenderID != value))
				{
					this._intGenderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strGender", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strGender
		{
			get
			{
				return this._strGender;
			}
			set
			{
				if ((this._strGender != value))
				{
					this._strGender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCustomerPurchaseID", DbType="Int NOT NULL")]
		public int intCustomerPurchaseID
		{
			get
			{
				return this._intCustomerPurchaseID;
			}
			set
			{
				if ((this._intCustomerPurchaseID != value))
				{
					this._intCustomerPurchaseID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intPurchaseNumber", DbType="Int NOT NULL")]
		public int intPurchaseNumber
		{
			get
			{
				return this._intPurchaseNumber;
			}
			set
			{
				if ((this._intPurchaseNumber != value))
				{
					this._intPurchaseNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Purchase Total]", Storage="_Purchase_Total", DbType="Decimal(9,2) NOT NULL")]
		public decimal Purchase_Total
		{
			get
			{
				return this._Purchase_Total;
			}
			set
			{
				if ((this._Purchase_Total != value))
				{
					this._Purchase_Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtmDateTime", DbType="Date NOT NULL")]
		public System.DateTime dtmDateTime
		{
			get
			{
				return this._dtmDateTime;
			}
			set
			{
				if ((this._dtmDateTime != value))
				{
					this._dtmDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCustomerPurchaseProductID", DbType="Int NOT NULL")]
		public int intCustomerPurchaseProductID
		{
			get
			{
				return this._intCustomerPurchaseProductID;
			}
			set
			{
				if ((this._intCustomerPurchaseProductID != value))
				{
					this._intCustomerPurchaseProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intProductPurchaseCount", DbType="Int NOT NULL")]
		public int intProductPurchaseCount
		{
			get
			{
				return this._intProductPurchaseCount;
			}
			set
			{
				if ((this._intProductPurchaseCount != value))
				{
					this._intProductPurchaseCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decProductTotal", DbType="Decimal(9,2) NOT NULL")]
		public decimal decProductTotal
		{
			get
			{
				return this._decProductTotal;
			}
			set
			{
				if ((this._decProductTotal != value))
				{
					this._decProductTotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intProductID", DbType="Int NOT NULL")]
		public int intProductID
		{
			get
			{
				return this._intProductID;
			}
			set
			{
				if ((this._intProductID != value))
				{
					this._intProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strProductName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strProductName
		{
			get
			{
				return this._strProductName;
			}
			set
			{
				if ((this._strProductName != value))
				{
					this._strProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decBandPrice", DbType="Decimal(9,2) NOT NULL")]
		public decimal decBandPrice
		{
			get
			{
				return this._decBandPrice;
			}
			set
			{
				if ((this._decBandPrice != value))
				{
					this._decBandPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strImageLink", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strImageLink
		{
			get
			{
				return this._strImageLink;
			}
			set
			{
				if ((this._strImageLink != value))
				{
					this._strImageLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intTypeID", DbType="Int NOT NULL")]
		public int intTypeID
		{
			get
			{
				return this._intTypeID;
			}
			set
			{
				if ((this._intTypeID != value))
				{
					this._intTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strBaseType", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strBaseType
		{
			get
			{
				return this._strBaseType;
			}
			set
			{
				if ((this._strBaseType != value))
				{
					this._strBaseType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intColorID", DbType="Int NOT NULL")]
		public int intColorID
		{
			get
			{
				return this._intColorID;
			}
			set
			{
				if ((this._intColorID != value))
				{
					this._intColorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strColor", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strColor
		{
			get
			{
				return this._strColor;
			}
			set
			{
				if ((this._strColor != value))
				{
					this._strColor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBandID", DbType="Int NOT NULL")]
		public int intBandID
		{
			get
			{
				return this._intBandID;
			}
			set
			{
				if ((this._intBandID != value))
				{
					this._intBandID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strBandName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strBandName
		{
			get
			{
				return this._strBandName;
			}
			set
			{
				if ((this._strBandName != value))
				{
					this._strBandName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TBands")]
	public partial class TBand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intBandID;
		
		private int _intStateID;
		
		private string _strBandName;
		
		private string _strPhone;
		
		private string _strEmail;
		
		private string _strCity;
		
		private string _strAddress;
		
		private string _strZip;
		
		private EntitySet<TBandsOrder> _TBandsOrders;
		
		private EntitySet<TMember> _TMembers;
		
		private EntityRef<TState> _TState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintBandIDChanging(int value);
    partial void OnintBandIDChanged();
    partial void OnintStateIDChanging(int value);
    partial void OnintStateIDChanged();
    partial void OnstrBandNameChanging(string value);
    partial void OnstrBandNameChanged();
    partial void OnstrPhoneChanging(string value);
    partial void OnstrPhoneChanged();
    partial void OnstrEmailChanging(string value);
    partial void OnstrEmailChanged();
    partial void OnstrCityChanging(string value);
    partial void OnstrCityChanged();
    partial void OnstrAddressChanging(string value);
    partial void OnstrAddressChanged();
    partial void OnstrZipChanging(string value);
    partial void OnstrZipChanged();
    #endregion
		
		public TBand()
		{
			this._TBandsOrders = new EntitySet<TBandsOrder>(new Action<TBandsOrder>(this.attach_TBandsOrders), new Action<TBandsOrder>(this.detach_TBandsOrders));
			this._TMembers = new EntitySet<TMember>(new Action<TMember>(this.attach_TMembers), new Action<TMember>(this.detach_TMembers));
			this._TState = default(EntityRef<TState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBandID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int intBandID
		{
			get
			{
				return this._intBandID;
			}
			set
			{
				if ((this._intBandID != value))
				{
					this.OnintBandIDChanging(value);
					this.SendPropertyChanging();
					this._intBandID = value;
					this.SendPropertyChanged("intBandID");
					this.OnintBandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intStateID", DbType="Int NOT NULL")]
		public int intStateID
		{
			get
			{
				return this._intStateID;
			}
			set
			{
				if ((this._intStateID != value))
				{
					if (this._TState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintStateIDChanging(value);
					this.SendPropertyChanging();
					this._intStateID = value;
					this.SendPropertyChanged("intStateID");
					this.OnintStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strBandName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strBandName
		{
			get
			{
				return this._strBandName;
			}
			set
			{
				if ((this._strBandName != value))
				{
					this.OnstrBandNameChanging(value);
					this.SendPropertyChanging();
					this._strBandName = value;
					this.SendPropertyChanged("strBandName");
					this.OnstrBandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPhone", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strPhone
		{
			get
			{
				return this._strPhone;
			}
			set
			{
				if ((this._strPhone != value))
				{
					this.OnstrPhoneChanging(value);
					this.SendPropertyChanging();
					this._strPhone = value;
					this.SendPropertyChanged("strPhone");
					this.OnstrPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEmail", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strEmail
		{
			get
			{
				return this._strEmail;
			}
			set
			{
				if ((this._strEmail != value))
				{
					this.OnstrEmailChanging(value);
					this.SendPropertyChanging();
					this._strEmail = value;
					this.SendPropertyChanged("strEmail");
					this.OnstrEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCity", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strCity
		{
			get
			{
				return this._strCity;
			}
			set
			{
				if ((this._strCity != value))
				{
					this.OnstrCityChanging(value);
					this.SendPropertyChanging();
					this._strCity = value;
					this.SendPropertyChanged("strCity");
					this.OnstrCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strAddress
		{
			get
			{
				return this._strAddress;
			}
			set
			{
				if ((this._strAddress != value))
				{
					this.OnstrAddressChanging(value);
					this.SendPropertyChanging();
					this._strAddress = value;
					this.SendPropertyChanged("strAddress");
					this.OnstrAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strZip", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strZip
		{
			get
			{
				return this._strZip;
			}
			set
			{
				if ((this._strZip != value))
				{
					this.OnstrZipChanging(value);
					this.SendPropertyChanging();
					this._strZip = value;
					this.SendPropertyChanged("strZip");
					this.OnstrZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBand_TBandsOrder", Storage="_TBandsOrders", ThisKey="intBandID", OtherKey="intBandID")]
		public EntitySet<TBandsOrder> TBandsOrders
		{
			get
			{
				return this._TBandsOrders;
			}
			set
			{
				this._TBandsOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBand_TMember", Storage="_TMembers", ThisKey="intBandID", OtherKey="intBandID")]
		public EntitySet<TMember> TMembers
		{
			get
			{
				return this._TMembers;
			}
			set
			{
				this._TMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TState_TBand", Storage="_TState", ThisKey="intStateID", OtherKey="intStateID", IsForeignKey=true)]
		public TState TState
		{
			get
			{
				return this._TState.Entity;
			}
			set
			{
				TState previousValue = this._TState.Entity;
				if (((previousValue != value) 
							|| (this._TState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TState.Entity = null;
						previousValue.TBands.Remove(this);
					}
					this._TState.Entity = value;
					if ((value != null))
					{
						value.TBands.Add(this);
						this._intStateID = value.intStateID;
					}
					else
					{
						this._intStateID = default(int);
					}
					this.SendPropertyChanged("TState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBandsOrders(TBandsOrder entity)
		{
			this.SendPropertyChanging();
			entity.TBand = this;
		}
		
		private void detach_TBandsOrders(TBandsOrder entity)
		{
			this.SendPropertyChanging();
			entity.TBand = null;
		}
		
		private void attach_TMembers(TMember entity)
		{
			this.SendPropertyChanging();
			entity.TBand = this;
		}
		
		private void detach_TMembers(TMember entity)
		{
			this.SendPropertyChanging();
			entity.TBand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TTypes")]
	public partial class TType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intTypeID;
		
		private int _intBaseTypeID;
		
		private int _intColorID;
		
		private string _strQrCode;
		
		private EntitySet<TProduct> _TProducts;
		
		private EntityRef<TBaseType> _TBaseType;
		
		private EntityRef<TColor> _TColor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintTypeIDChanging(int value);
    partial void OnintTypeIDChanged();
    partial void OnintBaseTypeIDChanging(int value);
    partial void OnintBaseTypeIDChanged();
    partial void OnintColorIDChanging(int value);
    partial void OnintColorIDChanged();
    partial void OnstrQrCodeChanging(string value);
    partial void OnstrQrCodeChanged();
    #endregion
		
		public TType()
		{
			this._TProducts = new EntitySet<TProduct>(new Action<TProduct>(this.attach_TProducts), new Action<TProduct>(this.detach_TProducts));
			this._TBaseType = default(EntityRef<TBaseType>);
			this._TColor = default(EntityRef<TColor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int intTypeID
		{
			get
			{
				return this._intTypeID;
			}
			set
			{
				if ((this._intTypeID != value))
				{
					this.OnintTypeIDChanging(value);
					this.SendPropertyChanging();
					this._intTypeID = value;
					this.SendPropertyChanged("intTypeID");
					this.OnintTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBaseTypeID", DbType="Int NOT NULL")]
		public int intBaseTypeID
		{
			get
			{
				return this._intBaseTypeID;
			}
			set
			{
				if ((this._intBaseTypeID != value))
				{
					if (this._TBaseType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintBaseTypeIDChanging(value);
					this.SendPropertyChanging();
					this._intBaseTypeID = value;
					this.SendPropertyChanged("intBaseTypeID");
					this.OnintBaseTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intColorID", DbType="Int NOT NULL")]
		public int intColorID
		{
			get
			{
				return this._intColorID;
			}
			set
			{
				if ((this._intColorID != value))
				{
					if (this._TColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintColorIDChanging(value);
					this.SendPropertyChanging();
					this._intColorID = value;
					this.SendPropertyChanged("intColorID");
					this.OnintColorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strQrCode", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strQrCode
		{
			get
			{
				return this._strQrCode;
			}
			set
			{
				if ((this._strQrCode != value))
				{
					this.OnstrQrCodeChanging(value);
					this.SendPropertyChanging();
					this._strQrCode = value;
					this.SendPropertyChanged("strQrCode");
					this.OnstrQrCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TType_TProduct", Storage="_TProducts", ThisKey="intTypeID", OtherKey="intTypeID")]
		public EntitySet<TProduct> TProducts
		{
			get
			{
				return this._TProducts;
			}
			set
			{
				this._TProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBaseType_TType", Storage="_TBaseType", ThisKey="intBaseTypeID", OtherKey="intBaseTypeID", IsForeignKey=true)]
		public TBaseType TBaseType
		{
			get
			{
				return this._TBaseType.Entity;
			}
			set
			{
				TBaseType previousValue = this._TBaseType.Entity;
				if (((previousValue != value) 
							|| (this._TBaseType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBaseType.Entity = null;
						previousValue.TTypes.Remove(this);
					}
					this._TBaseType.Entity = value;
					if ((value != null))
					{
						value.TTypes.Add(this);
						this._intBaseTypeID = value.intBaseTypeID;
					}
					else
					{
						this._intBaseTypeID = default(int);
					}
					this.SendPropertyChanged("TBaseType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TColor_TType", Storage="_TColor", ThisKey="intColorID", OtherKey="intColorID", IsForeignKey=true)]
		public TColor TColor
		{
			get
			{
				return this._TColor.Entity;
			}
			set
			{
				TColor previousValue = this._TColor.Entity;
				if (((previousValue != value) 
							|| (this._TColor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TColor.Entity = null;
						previousValue.TTypes.Remove(this);
					}
					this._TColor.Entity = value;
					if ((value != null))
					{
						value.TTypes.Add(this);
						this._intColorID = value.intColorID;
					}
					else
					{
						this._intColorID = default(int);
					}
					this.SendPropertyChanged("TColor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TProducts(TProduct entity)
		{
			this.SendPropertyChanging();
			entity.TType = this;
		}
		
		private void detach_TProducts(TProduct entity)
		{
			this.SendPropertyChanging();
			entity.TType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TBandsOrders")]
	public partial class TBandsOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intBandOrderID;
		
		private int _intBandID;
		
		private int _intOrderNumber;
		
		private decimal _decTotal;
		
		private System.DateTime _dtmDateTime;
		
		private EntitySet<TOrdersSupplierProduct> _TOrdersSupplierProducts;
		
		private EntityRef<TBand> _TBand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintBandOrderIDChanging(int value);
    partial void OnintBandOrderIDChanged();
    partial void OnintBandIDChanging(int value);
    partial void OnintBandIDChanged();
    partial void OnintOrderNumberChanging(int value);
    partial void OnintOrderNumberChanged();
    partial void OndecTotalChanging(decimal value);
    partial void OndecTotalChanged();
    partial void OndtmDateTimeChanging(System.DateTime value);
    partial void OndtmDateTimeChanged();
    #endregion
		
		public TBandsOrder()
		{
			this._TOrdersSupplierProducts = new EntitySet<TOrdersSupplierProduct>(new Action<TOrdersSupplierProduct>(this.attach_TOrdersSupplierProducts), new Action<TOrdersSupplierProduct>(this.detach_TOrdersSupplierProducts));
			this._TBand = default(EntityRef<TBand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBandOrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int intBandOrderID
		{
			get
			{
				return this._intBandOrderID;
			}
			set
			{
				if ((this._intBandOrderID != value))
				{
					this.OnintBandOrderIDChanging(value);
					this.SendPropertyChanging();
					this._intBandOrderID = value;
					this.SendPropertyChanged("intBandOrderID");
					this.OnintBandOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBandID", DbType="Int NOT NULL")]
		public int intBandID
		{
			get
			{
				return this._intBandID;
			}
			set
			{
				if ((this._intBandID != value))
				{
					if (this._TBand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintBandIDChanging(value);
					this.SendPropertyChanging();
					this._intBandID = value;
					this.SendPropertyChanged("intBandID");
					this.OnintBandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intOrderNumber", DbType="Int NOT NULL")]
		public int intOrderNumber
		{
			get
			{
				return this._intOrderNumber;
			}
			set
			{
				if ((this._intOrderNumber != value))
				{
					this.OnintOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._intOrderNumber = value;
					this.SendPropertyChanged("intOrderNumber");
					this.OnintOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decTotal", DbType="Decimal(9,2) NOT NULL")]
		public decimal decTotal
		{
			get
			{
				return this._decTotal;
			}
			set
			{
				if ((this._decTotal != value))
				{
					this.OndecTotalChanging(value);
					this.SendPropertyChanging();
					this._decTotal = value;
					this.SendPropertyChanged("decTotal");
					this.OndecTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtmDateTime", DbType="Date NOT NULL")]
		public System.DateTime dtmDateTime
		{
			get
			{
				return this._dtmDateTime;
			}
			set
			{
				if ((this._dtmDateTime != value))
				{
					this.OndtmDateTimeChanging(value);
					this.SendPropertyChanging();
					this._dtmDateTime = value;
					this.SendPropertyChanged("dtmDateTime");
					this.OndtmDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBandsOrder_TOrdersSupplierProduct", Storage="_TOrdersSupplierProducts", ThisKey="intBandOrderID", OtherKey="intBandOrderID")]
		public EntitySet<TOrdersSupplierProduct> TOrdersSupplierProducts
		{
			get
			{
				return this._TOrdersSupplierProducts;
			}
			set
			{
				this._TOrdersSupplierProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBand_TBandsOrder", Storage="_TBand", ThisKey="intBandID", OtherKey="intBandID", IsForeignKey=true)]
		public TBand TBand
		{
			get
			{
				return this._TBand.Entity;
			}
			set
			{
				TBand previousValue = this._TBand.Entity;
				if (((previousValue != value) 
							|| (this._TBand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBand.Entity = null;
						previousValue.TBandsOrders.Remove(this);
					}
					this._TBand.Entity = value;
					if ((value != null))
					{
						value.TBandsOrders.Add(this);
						this._intBandID = value.intBandID;
					}
					else
					{
						this._intBandID = default(int);
					}
					this.SendPropertyChanged("TBand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TOrdersSupplierProducts(TOrdersSupplierProduct entity)
		{
			this.SendPropertyChanging();
			entity.TBandsOrder = this;
		}
		
		private void detach_TOrdersSupplierProducts(TOrdersSupplierProduct entity)
		{
			this.SendPropertyChanging();
			entity.TBandsOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TBaseTypes")]
	public partial class TBaseType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intBaseTypeID;
		
		private string _strBaseType;
		
		private EntitySet<TType> _TTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintBaseTypeIDChanging(int value);
    partial void OnintBaseTypeIDChanged();
    partial void OnstrBaseTypeChanging(string value);
    partial void OnstrBaseTypeChanged();
    #endregion
		
		public TBaseType()
		{
			this._TTypes = new EntitySet<TType>(new Action<TType>(this.attach_TTypes), new Action<TType>(this.detach_TTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBaseTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int intBaseTypeID
		{
			get
			{
				return this._intBaseTypeID;
			}
			set
			{
				if ((this._intBaseTypeID != value))
				{
					this.OnintBaseTypeIDChanging(value);
					this.SendPropertyChanging();
					this._intBaseTypeID = value;
					this.SendPropertyChanged("intBaseTypeID");
					this.OnintBaseTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strBaseType", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strBaseType
		{
			get
			{
				return this._strBaseType;
			}
			set
			{
				if ((this._strBaseType != value))
				{
					this.OnstrBaseTypeChanging(value);
					this.SendPropertyChanging();
					this._strBaseType = value;
					this.SendPropertyChanged("strBaseType");
					this.OnstrBaseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBaseType_TType", Storage="_TTypes", ThisKey="intBaseTypeID", OtherKey="intBaseTypeID")]
		public EntitySet<TType> TTypes
		{
			get
			{
				return this._TTypes;
			}
			set
			{
				this._TTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TTypes(TType entity)
		{
			this.SendPropertyChanging();
			entity.TBaseType = this;
		}
		
		private void detach_TTypes(TType entity)
		{
			this.SendPropertyChanging();
			entity.TBaseType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TColors")]
	public partial class TColor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intColorID;
		
		private string _strColor;
		
		private EntitySet<TType> _TTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintColorIDChanging(int value);
    partial void OnintColorIDChanged();
    partial void OnstrColorChanging(string value);
    partial void OnstrColorChanged();
    #endregion
		
		public TColor()
		{
			this._TTypes = new EntitySet<TType>(new Action<TType>(this.attach_TTypes), new Action<TType>(this.detach_TTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intColorID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int intColorID
		{
			get
			{
				return this._intColorID;
			}
			set
			{
				if ((this._intColorID != value))
				{
					this.OnintColorIDChanging(value);
					this.SendPropertyChanging();
					this._intColorID = value;
					this.SendPropertyChanged("intColorID");
					this.OnintColorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strColor", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strColor
		{
			get
			{
				return this._strColor;
			}
			set
			{
				if ((this._strColor != value))
				{
					this.OnstrColorChanging(value);
					this.SendPropertyChanging();
					this._strColor = value;
					this.SendPropertyChanged("strColor");
					this.OnstrColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TColor_TType", Storage="_TTypes", ThisKey="intColorID", OtherKey="intColorID")]
		public EntitySet<TType> TTypes
		{
			get
			{
				return this._TTypes;
			}
			set
			{
				this._TTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TTypes(TType entity)
		{
			this.SendPropertyChanging();
			entity.TColor = this;
		}
		
		private void detach_TTypes(TType entity)
		{
			this.SendPropertyChanging();
			entity.TColor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TCustomerPurchaseProducts")]
	public partial class TCustomerPurchaseProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intCustomerPurchaseProductID;
		
		private int _intCustomerPurchaseID;
		
		private int _intProductID;
		
		private int _intProductPurchaseCount;
		
		private decimal _decProductTotal;
		
		private EntityRef<TCustomerPurchase> _TCustomerPurchase;
		
		private EntityRef<TProduct> _TProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintCustomerPurchaseProductIDChanging(int value);
    partial void OnintCustomerPurchaseProductIDChanged();
    partial void OnintCustomerPurchaseIDChanging(int value);
    partial void OnintCustomerPurchaseIDChanged();
    partial void OnintProductIDChanging(int value);
    partial void OnintProductIDChanged();
    partial void OnintProductPurchaseCountChanging(int value);
    partial void OnintProductPurchaseCountChanged();
    partial void OndecProductTotalChanging(decimal value);
    partial void OndecProductTotalChanged();
    #endregion
		
		public TCustomerPurchaseProduct()
		{
			this._TCustomerPurchase = default(EntityRef<TCustomerPurchase>);
			this._TProduct = default(EntityRef<TProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCustomerPurchaseProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int intCustomerPurchaseProductID
		{
			get
			{
				return this._intCustomerPurchaseProductID;
			}
			set
			{
				if ((this._intCustomerPurchaseProductID != value))
				{
					this.OnintCustomerPurchaseProductIDChanging(value);
					this.SendPropertyChanging();
					this._intCustomerPurchaseProductID = value;
					this.SendPropertyChanged("intCustomerPurchaseProductID");
					this.OnintCustomerPurchaseProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCustomerPurchaseID", DbType="Int NOT NULL")]
		public int intCustomerPurchaseID
		{
			get
			{
				return this._intCustomerPurchaseID;
			}
			set
			{
				if ((this._intCustomerPurchaseID != value))
				{
					if (this._TCustomerPurchase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintCustomerPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._intCustomerPurchaseID = value;
					this.SendPropertyChanged("intCustomerPurchaseID");
					this.OnintCustomerPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intProductID", DbType="Int NOT NULL")]
		public int intProductID
		{
			get
			{
				return this._intProductID;
			}
			set
			{
				if ((this._intProductID != value))
				{
					if (this._TProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintProductIDChanging(value);
					this.SendPropertyChanging();
					this._intProductID = value;
					this.SendPropertyChanged("intProductID");
					this.OnintProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intProductPurchaseCount", DbType="Int NOT NULL")]
		public int intProductPurchaseCount
		{
			get
			{
				return this._intProductPurchaseCount;
			}
			set
			{
				if ((this._intProductPurchaseCount != value))
				{
					this.OnintProductPurchaseCountChanging(value);
					this.SendPropertyChanging();
					this._intProductPurchaseCount = value;
					this.SendPropertyChanged("intProductPurchaseCount");
					this.OnintProductPurchaseCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decProductTotal", DbType="Decimal(9,2) NOT NULL")]
		public decimal decProductTotal
		{
			get
			{
				return this._decProductTotal;
			}
			set
			{
				if ((this._decProductTotal != value))
				{
					this.OndecProductTotalChanging(value);
					this.SendPropertyChanging();
					this._decProductTotal = value;
					this.SendPropertyChanged("decProductTotal");
					this.OndecProductTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TCustomerPurchase_TCustomerPurchaseProduct", Storage="_TCustomerPurchase", ThisKey="intCustomerPurchaseID", OtherKey="intCustomerPurchaseID", IsForeignKey=true)]
		public TCustomerPurchase TCustomerPurchase
		{
			get
			{
				return this._TCustomerPurchase.Entity;
			}
			set
			{
				TCustomerPurchase previousValue = this._TCustomerPurchase.Entity;
				if (((previousValue != value) 
							|| (this._TCustomerPurchase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TCustomerPurchase.Entity = null;
						previousValue.TCustomerPurchaseProducts.Remove(this);
					}
					this._TCustomerPurchase.Entity = value;
					if ((value != null))
					{
						value.TCustomerPurchaseProducts.Add(this);
						this._intCustomerPurchaseID = value.intCustomerPurchaseID;
					}
					else
					{
						this._intCustomerPurchaseID = default(int);
					}
					this.SendPropertyChanged("TCustomerPurchase");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TProduct_TCustomerPurchaseProduct", Storage="_TProduct", ThisKey="intProductID", OtherKey="intProductID", IsForeignKey=true)]
		public TProduct TProduct
		{
			get
			{
				return this._TProduct.Entity;
			}
			set
			{
				TProduct previousValue = this._TProduct.Entity;
				if (((previousValue != value) 
							|| (this._TProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TProduct.Entity = null;
						previousValue.TCustomerPurchaseProducts.Remove(this);
					}
					this._TProduct.Entity = value;
					if ((value != null))
					{
						value.TCustomerPurchaseProducts.Add(this);
						this._intProductID = value.intProductID;
					}
					else
					{
						this._intProductID = default(int);
					}
					this.SendPropertyChanged("TProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TCustomerPurchases")]
	public partial class TCustomerPurchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intCustomerPurchaseID;
		
		private int _intCustomerID;
		
		private int _intPurchaseNumber;
		
		private decimal _decTotal;
		
		private System.DateTime _dtmDateTime;
		
		private EntitySet<TCustomerPurchaseProduct> _TCustomerPurchaseProducts;
		
		private EntityRef<TCustomer> _TCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintCustomerPurchaseIDChanging(int value);
    partial void OnintCustomerPurchaseIDChanged();
    partial void OnintCustomerIDChanging(int value);
    partial void OnintCustomerIDChanged();
    partial void OnintPurchaseNumberChanging(int value);
    partial void OnintPurchaseNumberChanged();
    partial void OndecTotalChanging(decimal value);
    partial void OndecTotalChanged();
    partial void OndtmDateTimeChanging(System.DateTime value);
    partial void OndtmDateTimeChanged();
    #endregion
		
		public TCustomerPurchase()
		{
			this._TCustomerPurchaseProducts = new EntitySet<TCustomerPurchaseProduct>(new Action<TCustomerPurchaseProduct>(this.attach_TCustomerPurchaseProducts), new Action<TCustomerPurchaseProduct>(this.detach_TCustomerPurchaseProducts));
			this._TCustomer = default(EntityRef<TCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCustomerPurchaseID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int intCustomerPurchaseID
		{
			get
			{
				return this._intCustomerPurchaseID;
			}
			set
			{
				if ((this._intCustomerPurchaseID != value))
				{
					this.OnintCustomerPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._intCustomerPurchaseID = value;
					this.SendPropertyChanged("intCustomerPurchaseID");
					this.OnintCustomerPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCustomerID", DbType="Int NOT NULL")]
		public int intCustomerID
		{
			get
			{
				return this._intCustomerID;
			}
			set
			{
				if ((this._intCustomerID != value))
				{
					if (this._TCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._intCustomerID = value;
					this.SendPropertyChanged("intCustomerID");
					this.OnintCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intPurchaseNumber", DbType="Int NOT NULL")]
		public int intPurchaseNumber
		{
			get
			{
				return this._intPurchaseNumber;
			}
			set
			{
				if ((this._intPurchaseNumber != value))
				{
					this.OnintPurchaseNumberChanging(value);
					this.SendPropertyChanging();
					this._intPurchaseNumber = value;
					this.SendPropertyChanged("intPurchaseNumber");
					this.OnintPurchaseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decTotal", DbType="Decimal(9,2) NOT NULL")]
		public decimal decTotal
		{
			get
			{
				return this._decTotal;
			}
			set
			{
				if ((this._decTotal != value))
				{
					this.OndecTotalChanging(value);
					this.SendPropertyChanging();
					this._decTotal = value;
					this.SendPropertyChanged("decTotal");
					this.OndecTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtmDateTime", DbType="Date NOT NULL")]
		public System.DateTime dtmDateTime
		{
			get
			{
				return this._dtmDateTime;
			}
			set
			{
				if ((this._dtmDateTime != value))
				{
					this.OndtmDateTimeChanging(value);
					this.SendPropertyChanging();
					this._dtmDateTime = value;
					this.SendPropertyChanged("dtmDateTime");
					this.OndtmDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TCustomerPurchase_TCustomerPurchaseProduct", Storage="_TCustomerPurchaseProducts", ThisKey="intCustomerPurchaseID", OtherKey="intCustomerPurchaseID")]
		public EntitySet<TCustomerPurchaseProduct> TCustomerPurchaseProducts
		{
			get
			{
				return this._TCustomerPurchaseProducts;
			}
			set
			{
				this._TCustomerPurchaseProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TCustomer_TCustomerPurchase", Storage="_TCustomer", ThisKey="intCustomerID", OtherKey="intCustomerID", IsForeignKey=true)]
		public TCustomer TCustomer
		{
			get
			{
				return this._TCustomer.Entity;
			}
			set
			{
				TCustomer previousValue = this._TCustomer.Entity;
				if (((previousValue != value) 
							|| (this._TCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TCustomer.Entity = null;
						previousValue.TCustomerPurchases.Remove(this);
					}
					this._TCustomer.Entity = value;
					if ((value != null))
					{
						value.TCustomerPurchases.Add(this);
						this._intCustomerID = value.intCustomerID;
					}
					else
					{
						this._intCustomerID = default(int);
					}
					this.SendPropertyChanged("TCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TCustomerPurchaseProducts(TCustomerPurchaseProduct entity)
		{
			this.SendPropertyChanging();
			entity.TCustomerPurchase = this;
		}
		
		private void detach_TCustomerPurchaseProducts(TCustomerPurchaseProduct entity)
		{
			this.SendPropertyChanging();
			entity.TCustomerPurchase = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TCustomers")]
	public partial class TCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intCustomerID;
		
		private int _intStateID;
		
		private int _intGenderID;
		
		private string _strFirstName;
		
		private string _strLastName;
		
		private string _strPhone;
		
		private string _strEmail;
		
		private string _strAddress;
		
		private string _strCity;
		
		private string _strZip;
		
		private EntitySet<TCustomerPurchase> _TCustomerPurchases;
		
		private EntityRef<TGender> _TGender;
		
		private EntityRef<TState> _TState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintCustomerIDChanging(int value);
    partial void OnintCustomerIDChanged();
    partial void OnintStateIDChanging(int value);
    partial void OnintStateIDChanged();
    partial void OnintGenderIDChanging(int value);
    partial void OnintGenderIDChanged();
    partial void OnstrFirstNameChanging(string value);
    partial void OnstrFirstNameChanged();
    partial void OnstrLastNameChanging(string value);
    partial void OnstrLastNameChanged();
    partial void OnstrPhoneChanging(string value);
    partial void OnstrPhoneChanged();
    partial void OnstrEmailChanging(string value);
    partial void OnstrEmailChanged();
    partial void OnstrAddressChanging(string value);
    partial void OnstrAddressChanged();
    partial void OnstrCityChanging(string value);
    partial void OnstrCityChanged();
    partial void OnstrZipChanging(string value);
    partial void OnstrZipChanged();
    #endregion
		
		public TCustomer()
		{
			this._TCustomerPurchases = new EntitySet<TCustomerPurchase>(new Action<TCustomerPurchase>(this.attach_TCustomerPurchases), new Action<TCustomerPurchase>(this.detach_TCustomerPurchases));
			this._TGender = default(EntityRef<TGender>);
			this._TState = default(EntityRef<TState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCustomerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int intCustomerID
		{
			get
			{
				return this._intCustomerID;
			}
			set
			{
				if ((this._intCustomerID != value))
				{
					this.OnintCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._intCustomerID = value;
					this.SendPropertyChanged("intCustomerID");
					this.OnintCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intStateID", DbType="Int NOT NULL")]
		public int intStateID
		{
			get
			{
				return this._intStateID;
			}
			set
			{
				if ((this._intStateID != value))
				{
					if (this._TState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintStateIDChanging(value);
					this.SendPropertyChanging();
					this._intStateID = value;
					this.SendPropertyChanged("intStateID");
					this.OnintStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intGenderID", DbType="Int NOT NULL")]
		public int intGenderID
		{
			get
			{
				return this._intGenderID;
			}
			set
			{
				if ((this._intGenderID != value))
				{
					if (this._TGender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintGenderIDChanging(value);
					this.SendPropertyChanging();
					this._intGenderID = value;
					this.SendPropertyChanged("intGenderID");
					this.OnintGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strFirstName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strFirstName
		{
			get
			{
				return this._strFirstName;
			}
			set
			{
				if ((this._strFirstName != value))
				{
					this.OnstrFirstNameChanging(value);
					this.SendPropertyChanging();
					this._strFirstName = value;
					this.SendPropertyChanged("strFirstName");
					this.OnstrFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strLastName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strLastName
		{
			get
			{
				return this._strLastName;
			}
			set
			{
				if ((this._strLastName != value))
				{
					this.OnstrLastNameChanging(value);
					this.SendPropertyChanging();
					this._strLastName = value;
					this.SendPropertyChanged("strLastName");
					this.OnstrLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPhone", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strPhone
		{
			get
			{
				return this._strPhone;
			}
			set
			{
				if ((this._strPhone != value))
				{
					this.OnstrPhoneChanging(value);
					this.SendPropertyChanging();
					this._strPhone = value;
					this.SendPropertyChanged("strPhone");
					this.OnstrPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEmail", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strEmail
		{
			get
			{
				return this._strEmail;
			}
			set
			{
				if ((this._strEmail != value))
				{
					this.OnstrEmailChanging(value);
					this.SendPropertyChanging();
					this._strEmail = value;
					this.SendPropertyChanged("strEmail");
					this.OnstrEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strAddress
		{
			get
			{
				return this._strAddress;
			}
			set
			{
				if ((this._strAddress != value))
				{
					this.OnstrAddressChanging(value);
					this.SendPropertyChanging();
					this._strAddress = value;
					this.SendPropertyChanged("strAddress");
					this.OnstrAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCity", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strCity
		{
			get
			{
				return this._strCity;
			}
			set
			{
				if ((this._strCity != value))
				{
					this.OnstrCityChanging(value);
					this.SendPropertyChanging();
					this._strCity = value;
					this.SendPropertyChanged("strCity");
					this.OnstrCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strZip", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strZip
		{
			get
			{
				return this._strZip;
			}
			set
			{
				if ((this._strZip != value))
				{
					this.OnstrZipChanging(value);
					this.SendPropertyChanging();
					this._strZip = value;
					this.SendPropertyChanged("strZip");
					this.OnstrZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TCustomer_TCustomerPurchase", Storage="_TCustomerPurchases", ThisKey="intCustomerID", OtherKey="intCustomerID")]
		public EntitySet<TCustomerPurchase> TCustomerPurchases
		{
			get
			{
				return this._TCustomerPurchases;
			}
			set
			{
				this._TCustomerPurchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TGender_TCustomer", Storage="_TGender", ThisKey="intGenderID", OtherKey="intGenderID", IsForeignKey=true)]
		public TGender TGender
		{
			get
			{
				return this._TGender.Entity;
			}
			set
			{
				TGender previousValue = this._TGender.Entity;
				if (((previousValue != value) 
							|| (this._TGender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TGender.Entity = null;
						previousValue.TCustomers.Remove(this);
					}
					this._TGender.Entity = value;
					if ((value != null))
					{
						value.TCustomers.Add(this);
						this._intGenderID = value.intGenderID;
					}
					else
					{
						this._intGenderID = default(int);
					}
					this.SendPropertyChanged("TGender");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TState_TCustomer", Storage="_TState", ThisKey="intStateID", OtherKey="intStateID", IsForeignKey=true)]
		public TState TState
		{
			get
			{
				return this._TState.Entity;
			}
			set
			{
				TState previousValue = this._TState.Entity;
				if (((previousValue != value) 
							|| (this._TState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TState.Entity = null;
						previousValue.TCustomers.Remove(this);
					}
					this._TState.Entity = value;
					if ((value != null))
					{
						value.TCustomers.Add(this);
						this._intStateID = value.intStateID;
					}
					else
					{
						this._intStateID = default(int);
					}
					this.SendPropertyChanged("TState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TCustomerPurchases(TCustomerPurchase entity)
		{
			this.SendPropertyChanging();
			entity.TCustomer = this;
		}
		
		private void detach_TCustomerPurchases(TCustomerPurchase entity)
		{
			this.SendPropertyChanging();
			entity.TCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TGenders")]
	public partial class TGender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intGenderID;
		
		private string _strGender;
		
		private EntitySet<TCustomer> _TCustomers;
		
		private EntitySet<TMember> _TMembers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintGenderIDChanging(int value);
    partial void OnintGenderIDChanged();
    partial void OnstrGenderChanging(string value);
    partial void OnstrGenderChanged();
    #endregion
		
		public TGender()
		{
			this._TCustomers = new EntitySet<TCustomer>(new Action<TCustomer>(this.attach_TCustomers), new Action<TCustomer>(this.detach_TCustomers));
			this._TMembers = new EntitySet<TMember>(new Action<TMember>(this.attach_TMembers), new Action<TMember>(this.detach_TMembers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intGenderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int intGenderID
		{
			get
			{
				return this._intGenderID;
			}
			set
			{
				if ((this._intGenderID != value))
				{
					this.OnintGenderIDChanging(value);
					this.SendPropertyChanging();
					this._intGenderID = value;
					this.SendPropertyChanged("intGenderID");
					this.OnintGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strGender", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strGender
		{
			get
			{
				return this._strGender;
			}
			set
			{
				if ((this._strGender != value))
				{
					this.OnstrGenderChanging(value);
					this.SendPropertyChanging();
					this._strGender = value;
					this.SendPropertyChanged("strGender");
					this.OnstrGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TGender_TCustomer", Storage="_TCustomers", ThisKey="intGenderID", OtherKey="intGenderID")]
		public EntitySet<TCustomer> TCustomers
		{
			get
			{
				return this._TCustomers;
			}
			set
			{
				this._TCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TGender_TMember", Storage="_TMembers", ThisKey="intGenderID", OtherKey="intGenderID")]
		public EntitySet<TMember> TMembers
		{
			get
			{
				return this._TMembers;
			}
			set
			{
				this._TMembers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TCustomers(TCustomer entity)
		{
			this.SendPropertyChanging();
			entity.TGender = this;
		}
		
		private void detach_TCustomers(TCustomer entity)
		{
			this.SendPropertyChanging();
			entity.TGender = null;
		}
		
		private void attach_TMembers(TMember entity)
		{
			this.SendPropertyChanging();
			entity.TGender = this;
		}
		
		private void detach_TMembers(TMember entity)
		{
			this.SendPropertyChanging();
			entity.TGender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TMembers")]
	public partial class TMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intMemberID;
		
		private int _intBandID;
		
		private int _intStateID;
		
		private int _intGenderID;
		
		private string _strFirstName;
		
		private string _strLastName;
		
		private string _strPhone;
		
		private string _strEmail;
		
		private string _strAddress;
		
		private string _strCity;
		
		private string _strZip;
		
		private decimal _decSalary;
		
		private EntityRef<TBand> _TBand;
		
		private EntityRef<TGender> _TGender;
		
		private EntityRef<TState> _TState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintMemberIDChanging(int value);
    partial void OnintMemberIDChanged();
    partial void OnintBandIDChanging(int value);
    partial void OnintBandIDChanged();
    partial void OnintStateIDChanging(int value);
    partial void OnintStateIDChanged();
    partial void OnintGenderIDChanging(int value);
    partial void OnintGenderIDChanged();
    partial void OnstrFirstNameChanging(string value);
    partial void OnstrFirstNameChanged();
    partial void OnstrLastNameChanging(string value);
    partial void OnstrLastNameChanged();
    partial void OnstrPhoneChanging(string value);
    partial void OnstrPhoneChanged();
    partial void OnstrEmailChanging(string value);
    partial void OnstrEmailChanged();
    partial void OnstrAddressChanging(string value);
    partial void OnstrAddressChanged();
    partial void OnstrCityChanging(string value);
    partial void OnstrCityChanged();
    partial void OnstrZipChanging(string value);
    partial void OnstrZipChanged();
    partial void OndecSalaryChanging(decimal value);
    partial void OndecSalaryChanged();
    #endregion
		
		public TMember()
		{
			this._TBand = default(EntityRef<TBand>);
			this._TGender = default(EntityRef<TGender>);
			this._TState = default(EntityRef<TState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intMemberID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int intMemberID
		{
			get
			{
				return this._intMemberID;
			}
			set
			{
				if ((this._intMemberID != value))
				{
					this.OnintMemberIDChanging(value);
					this.SendPropertyChanging();
					this._intMemberID = value;
					this.SendPropertyChanged("intMemberID");
					this.OnintMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBandID", DbType="Int NOT NULL")]
		public int intBandID
		{
			get
			{
				return this._intBandID;
			}
			set
			{
				if ((this._intBandID != value))
				{
					if (this._TBand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintBandIDChanging(value);
					this.SendPropertyChanging();
					this._intBandID = value;
					this.SendPropertyChanged("intBandID");
					this.OnintBandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intStateID", DbType="Int NOT NULL")]
		public int intStateID
		{
			get
			{
				return this._intStateID;
			}
			set
			{
				if ((this._intStateID != value))
				{
					if (this._TState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintStateIDChanging(value);
					this.SendPropertyChanging();
					this._intStateID = value;
					this.SendPropertyChanged("intStateID");
					this.OnintStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intGenderID", DbType="Int NOT NULL")]
		public int intGenderID
		{
			get
			{
				return this._intGenderID;
			}
			set
			{
				if ((this._intGenderID != value))
				{
					if (this._TGender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintGenderIDChanging(value);
					this.SendPropertyChanging();
					this._intGenderID = value;
					this.SendPropertyChanged("intGenderID");
					this.OnintGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strFirstName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strFirstName
		{
			get
			{
				return this._strFirstName;
			}
			set
			{
				if ((this._strFirstName != value))
				{
					this.OnstrFirstNameChanging(value);
					this.SendPropertyChanging();
					this._strFirstName = value;
					this.SendPropertyChanged("strFirstName");
					this.OnstrFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strLastName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strLastName
		{
			get
			{
				return this._strLastName;
			}
			set
			{
				if ((this._strLastName != value))
				{
					this.OnstrLastNameChanging(value);
					this.SendPropertyChanging();
					this._strLastName = value;
					this.SendPropertyChanged("strLastName");
					this.OnstrLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPhone", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strPhone
		{
			get
			{
				return this._strPhone;
			}
			set
			{
				if ((this._strPhone != value))
				{
					this.OnstrPhoneChanging(value);
					this.SendPropertyChanging();
					this._strPhone = value;
					this.SendPropertyChanged("strPhone");
					this.OnstrPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEmail", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strEmail
		{
			get
			{
				return this._strEmail;
			}
			set
			{
				if ((this._strEmail != value))
				{
					this.OnstrEmailChanging(value);
					this.SendPropertyChanging();
					this._strEmail = value;
					this.SendPropertyChanged("strEmail");
					this.OnstrEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strAddress
		{
			get
			{
				return this._strAddress;
			}
			set
			{
				if ((this._strAddress != value))
				{
					this.OnstrAddressChanging(value);
					this.SendPropertyChanging();
					this._strAddress = value;
					this.SendPropertyChanged("strAddress");
					this.OnstrAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCity", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strCity
		{
			get
			{
				return this._strCity;
			}
			set
			{
				if ((this._strCity != value))
				{
					this.OnstrCityChanging(value);
					this.SendPropertyChanging();
					this._strCity = value;
					this.SendPropertyChanged("strCity");
					this.OnstrCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strZip", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strZip
		{
			get
			{
				return this._strZip;
			}
			set
			{
				if ((this._strZip != value))
				{
					this.OnstrZipChanging(value);
					this.SendPropertyChanging();
					this._strZip = value;
					this.SendPropertyChanged("strZip");
					this.OnstrZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decSalary", DbType="Decimal(9,2) NOT NULL")]
		public decimal decSalary
		{
			get
			{
				return this._decSalary;
			}
			set
			{
				if ((this._decSalary != value))
				{
					this.OndecSalaryChanging(value);
					this.SendPropertyChanging();
					this._decSalary = value;
					this.SendPropertyChanged("decSalary");
					this.OndecSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBand_TMember", Storage="_TBand", ThisKey="intBandID", OtherKey="intBandID", IsForeignKey=true)]
		public TBand TBand
		{
			get
			{
				return this._TBand.Entity;
			}
			set
			{
				TBand previousValue = this._TBand.Entity;
				if (((previousValue != value) 
							|| (this._TBand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBand.Entity = null;
						previousValue.TMembers.Remove(this);
					}
					this._TBand.Entity = value;
					if ((value != null))
					{
						value.TMembers.Add(this);
						this._intBandID = value.intBandID;
					}
					else
					{
						this._intBandID = default(int);
					}
					this.SendPropertyChanged("TBand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TGender_TMember", Storage="_TGender", ThisKey="intGenderID", OtherKey="intGenderID", IsForeignKey=true)]
		public TGender TGender
		{
			get
			{
				return this._TGender.Entity;
			}
			set
			{
				TGender previousValue = this._TGender.Entity;
				if (((previousValue != value) 
							|| (this._TGender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TGender.Entity = null;
						previousValue.TMembers.Remove(this);
					}
					this._TGender.Entity = value;
					if ((value != null))
					{
						value.TMembers.Add(this);
						this._intGenderID = value.intGenderID;
					}
					else
					{
						this._intGenderID = default(int);
					}
					this.SendPropertyChanged("TGender");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TState_TMember", Storage="_TState", ThisKey="intStateID", OtherKey="intStateID", IsForeignKey=true)]
		public TState TState
		{
			get
			{
				return this._TState.Entity;
			}
			set
			{
				TState previousValue = this._TState.Entity;
				if (((previousValue != value) 
							|| (this._TState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TState.Entity = null;
						previousValue.TMembers.Remove(this);
					}
					this._TState.Entity = value;
					if ((value != null))
					{
						value.TMembers.Add(this);
						this._intStateID = value.intStateID;
					}
					else
					{
						this._intStateID = default(int);
					}
					this.SendPropertyChanged("TState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TOrdersSupplierProducts")]
	public partial class TOrdersSupplierProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intOrderSupplierProductID;
		
		private int _intBandOrderID;
		
		private int _intSupplierProductID;
		
		private int _intProductOrderCount;
		
		private decimal _decProductTotal;
		
		private EntityRef<TBandsOrder> _TBandsOrder;
		
		private EntityRef<TSupplierProduct> _TSupplierProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintOrderSupplierProductIDChanging(int value);
    partial void OnintOrderSupplierProductIDChanged();
    partial void OnintBandOrderIDChanging(int value);
    partial void OnintBandOrderIDChanged();
    partial void OnintSupplierProductIDChanging(int value);
    partial void OnintSupplierProductIDChanged();
    partial void OnintProductOrderCountChanging(int value);
    partial void OnintProductOrderCountChanged();
    partial void OndecProductTotalChanging(decimal value);
    partial void OndecProductTotalChanged();
    #endregion
		
		public TOrdersSupplierProduct()
		{
			this._TBandsOrder = default(EntityRef<TBandsOrder>);
			this._TSupplierProduct = default(EntityRef<TSupplierProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intOrderSupplierProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int intOrderSupplierProductID
		{
			get
			{
				return this._intOrderSupplierProductID;
			}
			set
			{
				if ((this._intOrderSupplierProductID != value))
				{
					this.OnintOrderSupplierProductIDChanging(value);
					this.SendPropertyChanging();
					this._intOrderSupplierProductID = value;
					this.SendPropertyChanged("intOrderSupplierProductID");
					this.OnintOrderSupplierProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBandOrderID", DbType="Int NOT NULL")]
		public int intBandOrderID
		{
			get
			{
				return this._intBandOrderID;
			}
			set
			{
				if ((this._intBandOrderID != value))
				{
					if (this._TBandsOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintBandOrderIDChanging(value);
					this.SendPropertyChanging();
					this._intBandOrderID = value;
					this.SendPropertyChanged("intBandOrderID");
					this.OnintBandOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intSupplierProductID", DbType="Int NOT NULL")]
		public int intSupplierProductID
		{
			get
			{
				return this._intSupplierProductID;
			}
			set
			{
				if ((this._intSupplierProductID != value))
				{
					if (this._TSupplierProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintSupplierProductIDChanging(value);
					this.SendPropertyChanging();
					this._intSupplierProductID = value;
					this.SendPropertyChanged("intSupplierProductID");
					this.OnintSupplierProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intProductOrderCount", DbType="Int NOT NULL")]
		public int intProductOrderCount
		{
			get
			{
				return this._intProductOrderCount;
			}
			set
			{
				if ((this._intProductOrderCount != value))
				{
					this.OnintProductOrderCountChanging(value);
					this.SendPropertyChanging();
					this._intProductOrderCount = value;
					this.SendPropertyChanged("intProductOrderCount");
					this.OnintProductOrderCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decProductTotal", DbType="Decimal(9,2) NOT NULL")]
		public decimal decProductTotal
		{
			get
			{
				return this._decProductTotal;
			}
			set
			{
				if ((this._decProductTotal != value))
				{
					this.OndecProductTotalChanging(value);
					this.SendPropertyChanging();
					this._decProductTotal = value;
					this.SendPropertyChanged("decProductTotal");
					this.OndecProductTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBandsOrder_TOrdersSupplierProduct", Storage="_TBandsOrder", ThisKey="intBandOrderID", OtherKey="intBandOrderID", IsForeignKey=true)]
		public TBandsOrder TBandsOrder
		{
			get
			{
				return this._TBandsOrder.Entity;
			}
			set
			{
				TBandsOrder previousValue = this._TBandsOrder.Entity;
				if (((previousValue != value) 
							|| (this._TBandsOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBandsOrder.Entity = null;
						previousValue.TOrdersSupplierProducts.Remove(this);
					}
					this._TBandsOrder.Entity = value;
					if ((value != null))
					{
						value.TOrdersSupplierProducts.Add(this);
						this._intBandOrderID = value.intBandOrderID;
					}
					else
					{
						this._intBandOrderID = default(int);
					}
					this.SendPropertyChanged("TBandsOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TSupplierProduct_TOrdersSupplierProduct", Storage="_TSupplierProduct", ThisKey="intSupplierProductID", OtherKey="intSupplierProductID", IsForeignKey=true)]
		public TSupplierProduct TSupplierProduct
		{
			get
			{
				return this._TSupplierProduct.Entity;
			}
			set
			{
				TSupplierProduct previousValue = this._TSupplierProduct.Entity;
				if (((previousValue != value) 
							|| (this._TSupplierProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TSupplierProduct.Entity = null;
						previousValue.TOrdersSupplierProducts.Remove(this);
					}
					this._TSupplierProduct.Entity = value;
					if ((value != null))
					{
						value.TOrdersSupplierProducts.Add(this);
						this._intSupplierProductID = value.intSupplierProductID;
					}
					else
					{
						this._intSupplierProductID = default(int);
					}
					this.SendPropertyChanged("TSupplierProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TProducts")]
	public partial class TProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intProductID;
		
		private int _intBandID;
		
		private int _intTypeID;
		
		private string _strProductName;
		
		private decimal _decBandPrice;
		
		private int _intAmountAvialable;
		
		private string _strImageLink;
		
		private EntitySet<TCustomerPurchaseProduct> _TCustomerPurchaseProducts;
		
		private EntitySet<TSupplierProduct> _TSupplierProducts;
		
		private EntityRef<TType> _TType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintProductIDChanging(int value);
    partial void OnintProductIDChanged();
    partial void OnintBandIDChanging(int value);
    partial void OnintBandIDChanged();
    partial void OnintTypeIDChanging(int value);
    partial void OnintTypeIDChanged();
    partial void OnstrProductNameChanging(string value);
    partial void OnstrProductNameChanged();
    partial void OndecBandPriceChanging(decimal value);
    partial void OndecBandPriceChanged();
    partial void OnintAmountAvialableChanging(int value);
    partial void OnintAmountAvialableChanged();
    partial void OnstrImageLinkChanging(string value);
    partial void OnstrImageLinkChanged();
    #endregion
		
		public TProduct()
		{
			this._TCustomerPurchaseProducts = new EntitySet<TCustomerPurchaseProduct>(new Action<TCustomerPurchaseProduct>(this.attach_TCustomerPurchaseProducts), new Action<TCustomerPurchaseProduct>(this.detach_TCustomerPurchaseProducts));
			this._TSupplierProducts = new EntitySet<TSupplierProduct>(new Action<TSupplierProduct>(this.attach_TSupplierProducts), new Action<TSupplierProduct>(this.detach_TSupplierProducts));
			this._TType = default(EntityRef<TType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int intProductID
		{
			get
			{
				return this._intProductID;
			}
			set
			{
				if ((this._intProductID != value))
				{
					this.OnintProductIDChanging(value);
					this.SendPropertyChanging();
					this._intProductID = value;
					this.SendPropertyChanged("intProductID");
					this.OnintProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBandID", DbType="Int NOT NULL")]
		public int intBandID
		{
			get
			{
				return this._intBandID;
			}
			set
			{
				if ((this._intBandID != value))
				{
					this.OnintBandIDChanging(value);
					this.SendPropertyChanging();
					this._intBandID = value;
					this.SendPropertyChanged("intBandID");
					this.OnintBandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intTypeID", DbType="Int NOT NULL")]
		public int intTypeID
		{
			get
			{
				return this._intTypeID;
			}
			set
			{
				if ((this._intTypeID != value))
				{
					if (this._TType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintTypeIDChanging(value);
					this.SendPropertyChanging();
					this._intTypeID = value;
					this.SendPropertyChanged("intTypeID");
					this.OnintTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strProductName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strProductName
		{
			get
			{
				return this._strProductName;
			}
			set
			{
				if ((this._strProductName != value))
				{
					this.OnstrProductNameChanging(value);
					this.SendPropertyChanging();
					this._strProductName = value;
					this.SendPropertyChanged("strProductName");
					this.OnstrProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decBandPrice", DbType="Decimal(9,2) NOT NULL")]
		public decimal decBandPrice
		{
			get
			{
				return this._decBandPrice;
			}
			set
			{
				if ((this._decBandPrice != value))
				{
					this.OndecBandPriceChanging(value);
					this.SendPropertyChanging();
					this._decBandPrice = value;
					this.SendPropertyChanged("decBandPrice");
					this.OndecBandPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intAmountAvialable", DbType="Int NOT NULL")]
		public int intAmountAvialable
		{
			get
			{
				return this._intAmountAvialable;
			}
			set
			{
				if ((this._intAmountAvialable != value))
				{
					this.OnintAmountAvialableChanging(value);
					this.SendPropertyChanging();
					this._intAmountAvialable = value;
					this.SendPropertyChanged("intAmountAvialable");
					this.OnintAmountAvialableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strImageLink", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strImageLink
		{
			get
			{
				return this._strImageLink;
			}
			set
			{
				if ((this._strImageLink != value))
				{
					this.OnstrImageLinkChanging(value);
					this.SendPropertyChanging();
					this._strImageLink = value;
					this.SendPropertyChanged("strImageLink");
					this.OnstrImageLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TProduct_TCustomerPurchaseProduct", Storage="_TCustomerPurchaseProducts", ThisKey="intProductID", OtherKey="intProductID")]
		public EntitySet<TCustomerPurchaseProduct> TCustomerPurchaseProducts
		{
			get
			{
				return this._TCustomerPurchaseProducts;
			}
			set
			{
				this._TCustomerPurchaseProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TProduct_TSupplierProduct", Storage="_TSupplierProducts", ThisKey="intProductID", OtherKey="intProductID")]
		public EntitySet<TSupplierProduct> TSupplierProducts
		{
			get
			{
				return this._TSupplierProducts;
			}
			set
			{
				this._TSupplierProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TType_TProduct", Storage="_TType", ThisKey="intTypeID", OtherKey="intTypeID", IsForeignKey=true)]
		public TType TType
		{
			get
			{
				return this._TType.Entity;
			}
			set
			{
				TType previousValue = this._TType.Entity;
				if (((previousValue != value) 
							|| (this._TType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TType.Entity = null;
						previousValue.TProducts.Remove(this);
					}
					this._TType.Entity = value;
					if ((value != null))
					{
						value.TProducts.Add(this);
						this._intTypeID = value.intTypeID;
					}
					else
					{
						this._intTypeID = default(int);
					}
					this.SendPropertyChanged("TType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TCustomerPurchaseProducts(TCustomerPurchaseProduct entity)
		{
			this.SendPropertyChanging();
			entity.TProduct = this;
		}
		
		private void detach_TCustomerPurchaseProducts(TCustomerPurchaseProduct entity)
		{
			this.SendPropertyChanging();
			entity.TProduct = null;
		}
		
		private void attach_TSupplierProducts(TSupplierProduct entity)
		{
			this.SendPropertyChanging();
			entity.TProduct = this;
		}
		
		private void detach_TSupplierProducts(TSupplierProduct entity)
		{
			this.SendPropertyChanging();
			entity.TProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TStates")]
	public partial class TState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intStateID;
		
		private string _strStateName;
		
		private EntitySet<TBand> _TBands;
		
		private EntitySet<TCustomer> _TCustomers;
		
		private EntitySet<TMember> _TMembers;
		
		private EntitySet<TSupplier> _TSuppliers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintStateIDChanging(int value);
    partial void OnintStateIDChanged();
    partial void OnstrStateNameChanging(string value);
    partial void OnstrStateNameChanged();
    #endregion
		
		public TState()
		{
			this._TBands = new EntitySet<TBand>(new Action<TBand>(this.attach_TBands), new Action<TBand>(this.detach_TBands));
			this._TCustomers = new EntitySet<TCustomer>(new Action<TCustomer>(this.attach_TCustomers), new Action<TCustomer>(this.detach_TCustomers));
			this._TMembers = new EntitySet<TMember>(new Action<TMember>(this.attach_TMembers), new Action<TMember>(this.detach_TMembers));
			this._TSuppliers = new EntitySet<TSupplier>(new Action<TSupplier>(this.attach_TSuppliers), new Action<TSupplier>(this.detach_TSuppliers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intStateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int intStateID
		{
			get
			{
				return this._intStateID;
			}
			set
			{
				if ((this._intStateID != value))
				{
					this.OnintStateIDChanging(value);
					this.SendPropertyChanging();
					this._intStateID = value;
					this.SendPropertyChanged("intStateID");
					this.OnintStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strStateName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strStateName
		{
			get
			{
				return this._strStateName;
			}
			set
			{
				if ((this._strStateName != value))
				{
					this.OnstrStateNameChanging(value);
					this.SendPropertyChanging();
					this._strStateName = value;
					this.SendPropertyChanged("strStateName");
					this.OnstrStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TState_TBand", Storage="_TBands", ThisKey="intStateID", OtherKey="intStateID")]
		public EntitySet<TBand> TBands
		{
			get
			{
				return this._TBands;
			}
			set
			{
				this._TBands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TState_TCustomer", Storage="_TCustomers", ThisKey="intStateID", OtherKey="intStateID")]
		public EntitySet<TCustomer> TCustomers
		{
			get
			{
				return this._TCustomers;
			}
			set
			{
				this._TCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TState_TMember", Storage="_TMembers", ThisKey="intStateID", OtherKey="intStateID")]
		public EntitySet<TMember> TMembers
		{
			get
			{
				return this._TMembers;
			}
			set
			{
				this._TMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TState_TSupplier", Storage="_TSuppliers", ThisKey="intStateID", OtherKey="intStateID")]
		public EntitySet<TSupplier> TSuppliers
		{
			get
			{
				return this._TSuppliers;
			}
			set
			{
				this._TSuppliers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBands(TBand entity)
		{
			this.SendPropertyChanging();
			entity.TState = this;
		}
		
		private void detach_TBands(TBand entity)
		{
			this.SendPropertyChanging();
			entity.TState = null;
		}
		
		private void attach_TCustomers(TCustomer entity)
		{
			this.SendPropertyChanging();
			entity.TState = this;
		}
		
		private void detach_TCustomers(TCustomer entity)
		{
			this.SendPropertyChanging();
			entity.TState = null;
		}
		
		private void attach_TMembers(TMember entity)
		{
			this.SendPropertyChanging();
			entity.TState = this;
		}
		
		private void detach_TMembers(TMember entity)
		{
			this.SendPropertyChanging();
			entity.TState = null;
		}
		
		private void attach_TSuppliers(TSupplier entity)
		{
			this.SendPropertyChanging();
			entity.TState = this;
		}
		
		private void detach_TSuppliers(TSupplier entity)
		{
			this.SendPropertyChanging();
			entity.TState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TSupplierProducts")]
	public partial class TSupplierProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intSupplierProductID;
		
		private int _intSupplierID;
		
		private int _intProductID;
		
		private decimal _decSupplierPrice;
		
		private EntitySet<TOrdersSupplierProduct> _TOrdersSupplierProducts;
		
		private EntityRef<TProduct> _TProduct;
		
		private EntityRef<TSupplier> _TSupplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintSupplierProductIDChanging(int value);
    partial void OnintSupplierProductIDChanged();
    partial void OnintSupplierIDChanging(int value);
    partial void OnintSupplierIDChanged();
    partial void OnintProductIDChanging(int value);
    partial void OnintProductIDChanged();
    partial void OndecSupplierPriceChanging(decimal value);
    partial void OndecSupplierPriceChanged();
    #endregion
		
		public TSupplierProduct()
		{
			this._TOrdersSupplierProducts = new EntitySet<TOrdersSupplierProduct>(new Action<TOrdersSupplierProduct>(this.attach_TOrdersSupplierProducts), new Action<TOrdersSupplierProduct>(this.detach_TOrdersSupplierProducts));
			this._TProduct = default(EntityRef<TProduct>);
			this._TSupplier = default(EntityRef<TSupplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intSupplierProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int intSupplierProductID
		{
			get
			{
				return this._intSupplierProductID;
			}
			set
			{
				if ((this._intSupplierProductID != value))
				{
					this.OnintSupplierProductIDChanging(value);
					this.SendPropertyChanging();
					this._intSupplierProductID = value;
					this.SendPropertyChanged("intSupplierProductID");
					this.OnintSupplierProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intSupplierID", DbType="Int NOT NULL")]
		public int intSupplierID
		{
			get
			{
				return this._intSupplierID;
			}
			set
			{
				if ((this._intSupplierID != value))
				{
					if (this._TSupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._intSupplierID = value;
					this.SendPropertyChanged("intSupplierID");
					this.OnintSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intProductID", DbType="Int NOT NULL")]
		public int intProductID
		{
			get
			{
				return this._intProductID;
			}
			set
			{
				if ((this._intProductID != value))
				{
					if (this._TProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintProductIDChanging(value);
					this.SendPropertyChanging();
					this._intProductID = value;
					this.SendPropertyChanged("intProductID");
					this.OnintProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decSupplierPrice", DbType="Decimal(9,2) NOT NULL")]
		public decimal decSupplierPrice
		{
			get
			{
				return this._decSupplierPrice;
			}
			set
			{
				if ((this._decSupplierPrice != value))
				{
					this.OndecSupplierPriceChanging(value);
					this.SendPropertyChanging();
					this._decSupplierPrice = value;
					this.SendPropertyChanged("decSupplierPrice");
					this.OndecSupplierPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TSupplierProduct_TOrdersSupplierProduct", Storage="_TOrdersSupplierProducts", ThisKey="intSupplierProductID", OtherKey="intSupplierProductID")]
		public EntitySet<TOrdersSupplierProduct> TOrdersSupplierProducts
		{
			get
			{
				return this._TOrdersSupplierProducts;
			}
			set
			{
				this._TOrdersSupplierProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TProduct_TSupplierProduct", Storage="_TProduct", ThisKey="intProductID", OtherKey="intProductID", IsForeignKey=true)]
		public TProduct TProduct
		{
			get
			{
				return this._TProduct.Entity;
			}
			set
			{
				TProduct previousValue = this._TProduct.Entity;
				if (((previousValue != value) 
							|| (this._TProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TProduct.Entity = null;
						previousValue.TSupplierProducts.Remove(this);
					}
					this._TProduct.Entity = value;
					if ((value != null))
					{
						value.TSupplierProducts.Add(this);
						this._intProductID = value.intProductID;
					}
					else
					{
						this._intProductID = default(int);
					}
					this.SendPropertyChanged("TProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TSupplier_TSupplierProduct", Storage="_TSupplier", ThisKey="intSupplierID", OtherKey="intSupplierID", IsForeignKey=true)]
		public TSupplier TSupplier
		{
			get
			{
				return this._TSupplier.Entity;
			}
			set
			{
				TSupplier previousValue = this._TSupplier.Entity;
				if (((previousValue != value) 
							|| (this._TSupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TSupplier.Entity = null;
						previousValue.TSupplierProducts.Remove(this);
					}
					this._TSupplier.Entity = value;
					if ((value != null))
					{
						value.TSupplierProducts.Add(this);
						this._intSupplierID = value.intSupplierID;
					}
					else
					{
						this._intSupplierID = default(int);
					}
					this.SendPropertyChanged("TSupplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TOrdersSupplierProducts(TOrdersSupplierProduct entity)
		{
			this.SendPropertyChanging();
			entity.TSupplierProduct = this;
		}
		
		private void detach_TOrdersSupplierProducts(TOrdersSupplierProduct entity)
		{
			this.SendPropertyChanging();
			entity.TSupplierProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TSuppliers")]
	public partial class TSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intSupplierID;
		
		private int _intStateID;
		
		private string _strSupplierName;
		
		private string _strPhone;
		
		private string _strEmail;
		
		private string _strAddress;
		
		private string _strCity;
		
		private string _strZip;
		
		private EntitySet<TSupplierProduct> _TSupplierProducts;
		
		private EntityRef<TState> _TState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintSupplierIDChanging(int value);
    partial void OnintSupplierIDChanged();
    partial void OnintStateIDChanging(int value);
    partial void OnintStateIDChanged();
    partial void OnstrSupplierNameChanging(string value);
    partial void OnstrSupplierNameChanged();
    partial void OnstrPhoneChanging(string value);
    partial void OnstrPhoneChanged();
    partial void OnstrEmailChanging(string value);
    partial void OnstrEmailChanged();
    partial void OnstrAddressChanging(string value);
    partial void OnstrAddressChanged();
    partial void OnstrCityChanging(string value);
    partial void OnstrCityChanged();
    partial void OnstrZipChanging(string value);
    partial void OnstrZipChanged();
    #endregion
		
		public TSupplier()
		{
			this._TSupplierProducts = new EntitySet<TSupplierProduct>(new Action<TSupplierProduct>(this.attach_TSupplierProducts), new Action<TSupplierProduct>(this.detach_TSupplierProducts));
			this._TState = default(EntityRef<TState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intSupplierID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int intSupplierID
		{
			get
			{
				return this._intSupplierID;
			}
			set
			{
				if ((this._intSupplierID != value))
				{
					this.OnintSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._intSupplierID = value;
					this.SendPropertyChanged("intSupplierID");
					this.OnintSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intStateID", DbType="Int NOT NULL")]
		public int intStateID
		{
			get
			{
				return this._intStateID;
			}
			set
			{
				if ((this._intStateID != value))
				{
					if (this._TState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintStateIDChanging(value);
					this.SendPropertyChanging();
					this._intStateID = value;
					this.SendPropertyChanged("intStateID");
					this.OnintStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strSupplierName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strSupplierName
		{
			get
			{
				return this._strSupplierName;
			}
			set
			{
				if ((this._strSupplierName != value))
				{
					this.OnstrSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._strSupplierName = value;
					this.SendPropertyChanged("strSupplierName");
					this.OnstrSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPhone", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strPhone
		{
			get
			{
				return this._strPhone;
			}
			set
			{
				if ((this._strPhone != value))
				{
					this.OnstrPhoneChanging(value);
					this.SendPropertyChanging();
					this._strPhone = value;
					this.SendPropertyChanged("strPhone");
					this.OnstrPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEmail", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strEmail
		{
			get
			{
				return this._strEmail;
			}
			set
			{
				if ((this._strEmail != value))
				{
					this.OnstrEmailChanging(value);
					this.SendPropertyChanging();
					this._strEmail = value;
					this.SendPropertyChanged("strEmail");
					this.OnstrEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strAddress
		{
			get
			{
				return this._strAddress;
			}
			set
			{
				if ((this._strAddress != value))
				{
					this.OnstrAddressChanging(value);
					this.SendPropertyChanging();
					this._strAddress = value;
					this.SendPropertyChanged("strAddress");
					this.OnstrAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCity", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strCity
		{
			get
			{
				return this._strCity;
			}
			set
			{
				if ((this._strCity != value))
				{
					this.OnstrCityChanging(value);
					this.SendPropertyChanging();
					this._strCity = value;
					this.SendPropertyChanged("strCity");
					this.OnstrCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strZip", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strZip
		{
			get
			{
				return this._strZip;
			}
			set
			{
				if ((this._strZip != value))
				{
					this.OnstrZipChanging(value);
					this.SendPropertyChanging();
					this._strZip = value;
					this.SendPropertyChanged("strZip");
					this.OnstrZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TSupplier_TSupplierProduct", Storage="_TSupplierProducts", ThisKey="intSupplierID", OtherKey="intSupplierID")]
		public EntitySet<TSupplierProduct> TSupplierProducts
		{
			get
			{
				return this._TSupplierProducts;
			}
			set
			{
				this._TSupplierProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TState_TSupplier", Storage="_TState", ThisKey="intStateID", OtherKey="intStateID", IsForeignKey=true)]
		public TState TState
		{
			get
			{
				return this._TState.Entity;
			}
			set
			{
				TState previousValue = this._TState.Entity;
				if (((previousValue != value) 
							|| (this._TState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TState.Entity = null;
						previousValue.TSuppliers.Remove(this);
					}
					this._TState.Entity = value;
					if ((value != null))
					{
						value.TSuppliers.Add(this);
						this._intStateID = value.intStateID;
					}
					else
					{
						this._intStateID = default(int);
					}
					this.SendPropertyChanged("TState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TSupplierProducts(TSupplierProduct entity)
		{
			this.SendPropertyChanging();
			entity.TSupplier = this;
		}
		
		private void detach_TSupplierProducts(TSupplierProduct entity)
		{
			this.SendPropertyChanging();
			entity.TSupplier = null;
		}
	}
}
#pragma warning restore 1591
